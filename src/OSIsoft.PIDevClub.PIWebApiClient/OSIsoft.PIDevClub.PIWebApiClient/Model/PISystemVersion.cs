/* 
 * PI Web API 2016 R2 Swagger definition
 *
 * RESTful client for PI Web API 2016 R2
 *
 * OpenAPI spec version: v1
 * Contact: pidevclub@osisoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace OSIsoft.PIDevClub.PIWebApiClient.Model
{
    /// <summary>
    /// PISystemVersion
    /// </summary>
    [DataContract]
    public partial class PISystemVersion :  IEquatable<PISystemVersion>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PISystemVersion" /> class.
        /// </summary>
        /// <param name="Major">Major.</param>
        /// <param name="Minor">Minor.</param>
        /// <param name="Build">Build.</param>
        /// <param name="Revision">Revision.</param>
        public PISystemVersion(int? Major = null, int? Minor = null, int? Build = null, int? Revision = null)
        {
            this.Major = Major;
            this.Minor = Minor;
            this.Build = Build;
            this.Revision = Revision;
        }
        
        /// <summary>
        /// Gets or Sets Major
        /// </summary>
        [DataMember(Name="_Major", EmitDefaultValue=false)]
        public int? Major { get; set; }
        /// <summary>
        /// Gets or Sets Minor
        /// </summary>
        [DataMember(Name="_Minor", EmitDefaultValue=false)]
        public int? Minor { get; set; }
        /// <summary>
        /// Gets or Sets Build
        /// </summary>
        [DataMember(Name="_Build", EmitDefaultValue=false)]
        public int? Build { get; set; }
        /// <summary>
        /// Gets or Sets Revision
        /// </summary>
        [DataMember(Name="_Revision", EmitDefaultValue=false)]
        public int? Revision { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PISystemVersion {\n");
            sb.Append("  Major: ").Append(Major).Append("\n");
            sb.Append("  Minor: ").Append(Minor).Append("\n");
            sb.Append("  Build: ").Append(Build).Append("\n");
            sb.Append("  Revision: ").Append(Revision).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PISystemVersion);
        }

        /// <summary>
        /// Returns true if PISystemVersion instances are equal
        /// </summary>
        /// <param name="other">Instance of PISystemVersion to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PISystemVersion other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Major == other.Major ||
                    this.Major != null &&
                    this.Major.Equals(other.Major)
                ) && 
                (
                    this.Minor == other.Minor ||
                    this.Minor != null &&
                    this.Minor.Equals(other.Minor)
                ) && 
                (
                    this.Build == other.Build ||
                    this.Build != null &&
                    this.Build.Equals(other.Build)
                ) && 
                (
                    this.Revision == other.Revision ||
                    this.Revision != null &&
                    this.Revision.Equals(other.Revision)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Major != null)
                    hash = hash * 59 + this.Major.GetHashCode();
                if (this.Minor != null)
                    hash = hash * 59 + this.Minor.GetHashCode();
                if (this.Build != null)
                    hash = hash * 59 + this.Build.GetHashCode();
                if (this.Revision != null)
                    hash = hash * 59 + this.Revision.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
