// ************************************************************************
//
// * Copyright 2017 OSIsoft, LLC
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// * 
// *   <http://www.apache.org/licenses/LICENSE-2.0>
// * 
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// ************************************************************************

using NUnit.Framework;
using OSIsoft.PIDevClub.PIWebApiClient.Api;
using OSIsoft.PIDevClub.PIWebApiClient.Model;
using System.Collections.Generic;

namespace OSIsoft.PIDevClub.PIWebApiClient.Test
{
    /// <summary>
    ///  Class for testing BatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BatchApiTests : CommonApi
    {
        private IBatchApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            base.CommonInit();
            instance = client.BatchApi;
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BatchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BatchApi
            Assert.IsInstanceOf(typeof(BatchApi), instance, "instance is a BatchApi");
        }


        /// <summary>
        /// Test Execute
        /// </summary>
        [Test]
        public void ExecuteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value

            Dictionary<string, PIRequest> batch = new Dictionary<string, PIRequest>();
            batch.Add("4", new PIRequest("GET", @"https://marc-web-sql.marc.net/piwebapi/points?path=\\marc-pi2016\sinusoid"));
            batch.Add("5", new PIRequest("GET", @"https://marc-web-sql.marc.net/piwebapi/points?path=\\marc-pi2016\sinusoidu"));
            batch.Add("6", new PIRequest("GET", "https://marc-web-sql.marc.net/piwebapi/streamsets/value?webid={0}&amp;webid={1}", null,
                new List<string>() {"$.4.Content.WebId","$.5.Content.WebId" }, null, null, new List<string>() { "4", "5" }));


            var response = instance.Execute(batch);
            Assert.IsInstanceOf<Dictionary<string, PIResponse>>(response, "response is Dictionary<string, PIResponse>");
        }

    }

}
